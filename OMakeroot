open build/Common
open build/OCaml

.PHONY: lib doc examples tests \
        install install_lib install_doc \
        uninstall uninstall_lib \
        clean distclean \
        print_config

install: install_lib
uninstall: uninstall_lib

clean:
  rm -rf _build

distclean: clean
  rm -rf OMakeroot.omc .omakedb .omakedb.lock


################################################################################
# General Project Information
PROJECT = riakc
VERSION = 3.0.1-dev

LIB_NAME = $(PROJECT)
LIB_DESCRIPTION = Riak client.
LIB_MODULES[] =
  $(removesuffix $(basename $(ls src/lib/*.ml)))
LIB_PACKAGES = core async async_unix bitstring.syntax protobuf

EXAMPLES[] =
  $(removesuffix $(basename $(ls src/examples/*.ml)))


################################################################################
# Directory and File Names
DEFAULT_PREFIX=_build/usr
DefineCommandVars()

if $(not $(defined PREFIX))
  PREFIX = $(DEFAULT_PREFIX)
  export

if $(not $(defined BIN_DIR))
  BIN_DIR = $(PREFIX)/bin
  export

if $(not $(defined DOC_DIR))
  DOC_DIR = $(PREFIX)/doc
  export

print_config:
  echo "PREFIX = $(PREFIX)"
  echo "BIN_DIR = $(BIN_DIR)"
  echo "DOC_DIR = $(DOC_DIR)"


################################################################################
# Build Parameters
USE_OCAMLFIND = true
if $(not $(OCAMLFIND_EXISTS))
   eprintln(Required package ocamlfind not found.)
   exit 1

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = $(OCAMLC_EXISTS)

OCAMLFLAGS = -bin-annot -annot -warn-error P -thread
OCAMLCFLAGS =
OCAMLOPTFLAGS =
OCAML_LINK_FLAGS +=
OCAML_BYTE_LINK_FLAGS =
OCAML_NATIVE_LINK_FLAGS =
OCAMLFINDFLAGS = -syntax camlp4o
OCAMLPACKS[] = $(LIB_PACKAGES)

.SUBDIRS: .
  mkdir -p _build/lib
  mkdir -p _build/examples
  mkdir -p _build/tests
  mkdir -p _build/doc
  vmount(-l, src/, _build/)

  ##############################################################################
  # Library
  .SUBDIRS: _build/lib

    META:
      echo "description = \"$(LIB_DESCRIPTION)\"" > $@
      echo "version = \"$(VERSION)\"" >> $@
      echo "archive(byte) = \"$(LIB_NAME).cma\"" >> $@
      echo "archive(native) = \"$(LIB_NAME).cmxa\"" >> $@
      echo "requires = \"$(LIB_PACKAGES)\"" >> $@

    lib: $(OCamlLibrary $(LIB_NAME), $(LIB_MODULES))

    .DEFAULT: lib META

    install_lib: $(LIB_NAME).cma $(LIB_NAME).cmxa META uninstall_lib
      ocamlfind install $(PROJECT) META \
        *.cm[iox] *.o $(LIB_NAME).cma $(LIB_NAME).cmxa *.a

    uninstall_lib:
      ocamlfind remove $(PROJECT)


  ##############################################################################
  # Examples
  .SUBDIRS: _build/examples
    OCAML_LIBS = ../lib/$(LIB_NAME)
    OCAMLINCLUDES += $(dir ../lib)

    foreach (example => ..., $(EXAMPLES))
      .DEFAULT: $(OCamlProgram $(example), $(example))


  ##############################################################################
  # Tests
  .SUBDIRS: _build/tests
    OCAML_LIBS = ../lib/$(LIB_NAME)
    OCAMLINCLUDES += $(dir ../lib)

    .DEFAULT: $(OCamlProgram all_tests, all_tests)


  ##############################################################################
  # API Documentation
  .SUBDIRS: _build/doc

    api/index.html: ../lib/riakc/$(LIB_NAME).cma
      rm -rf api
      mkdir api
      ocamlfind ocamldoc \
        $(OCAMLFINDFLAGS) \
        -package $(concat \,, $(LIB_PACKAGES)) \
        -thread \
        -charset UTF-8 \
        -d api \
        -t "OCaml Riak $(VERSION)" \
        -keep-code \
        -colorize-code \
        -sort \
        -html \
        -I ../lib/riakc \
        ../lib/riakc/*.ml

    doc: api/index.html

  install_doc: doc
    echo "Installing documentation in $(DOC_DIR)"
    rm -rf $(DOC_DIR)
    mkdir -p $(DOC_DIR)
    cp -r _build/doc/api $(DOC_DIR)/
